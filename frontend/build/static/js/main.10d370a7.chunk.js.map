{"version":3,"sources":["components/sub-components/RecipeInfo.js","components/sub-components/RestaurantInfo.js","components/PrintPage.js","components/Context.js","components/HomePage.js","components/ListManagementPage.js","components/sub-components/ButtonGroup.js","components/RestaurantPage.js","components/RecipePage.js","components/SearchPage.js","App.js","serviceWorker.js","index.js"],"names":["RecipeInfo","state","name","img","preptime","cookTime","Ingredient","Instructions","info","JSON","parse","localStorage","getItem","ingredients","instructions","results","this","props","id","analyzedInstructions","steps","forEach","el","ingredient","push","step","console","log","setState","title","image","preparationMinutes","toString","cookingMinutes","classes","react_default","a","createElement","className","root","header","src","alt","imgSize","Grid_default","container","spacing","containerGrid","item","xs","map","e","i","key","textRight","React","Component","withStyles","theme","flexGrow","paddingLeft","marginTop","fontSize","height","width","marginLeft","RestaurantInfo","address","phone","website","openGoogle","link","encodeURIComponent","_this","window","location","replace","openWebsite","display_address","url","onClick","hoverText","&:hover","cursor","PrintPage","match","params","sub_components_RecipeInfo","sub_components_RestaurantInfo","withRouter","HungryContext","createContext","test","Provider","Consumer","PageLayout","styled","div","_templateObject","SearchLayout","_templateObject2","SearchInput","input","_templateObject3","SearchButton","button","_templateObject4","_useState","useState","_useState2","Object","slicedToArray","searchQuery","setSearchQuery","_useState3","_useState4","numResults","setNumResults","_useState5","_useState6","loading","setLoading","sendQuery","alert","fetch","concat","then","resp","json","data","setItem","stringify","recipes","_recipes$results","newRecipes","recipeIndex","length","apply","toConsumableArray","businesses","restaurants","_restaurants","newRestaurants","restaurantIndex","setTimeout","history","onSubmit","event","preventDefault","value","placeholder","onChange","target","data-tip","Container","ListManagementPage_templateObject","HeadingLayout","ListManagementPage_templateObject2","NavLayout","ListManagementPage_templateObject3","NavSelect","select","ListManagementPage_templateObject4","NavButton","_templateObject5","ItemLayout","_templateObject6","dark","RestaurantItemLayout","_templateObject7","RecipeItemLayout","_templateObject8","selectedList","setSelectedList","setRecipes","_useState7","_useState8","setRestaurants","useEffect","localStorageRecipes","list","localStorageRestaurants","defaultValue","hidden","recipe","idx","allRecipes","Link","to","readyInMinutes","pricePerServing","restaurant","isDark","price","ButtonGroup","open","handleChange","addToList","includes","handBack","printDocument","Button_default","variant","FormControl_default","form","NativeSelect_default","dropdown","disabled","paddingRight","marginBottom","RestaurantPage","left","right","sub_components_ButtonGroup","passId","padding","unit","RecipePage","SearchPage_templateObject","ColumnLayout","SearchPage_templateObject2","SearchPage_templateObject3","SearchPage_templateObject4","SubItemLayout","SearchPage_templateObject5","SearchPage_templateObject6","SearchPage_templateObject7","SearchPage_templateObject8","_templateObject9","_templateObject10","PhotoBox","_templateObject11","Photo","_templateObject12","top","rot","query","setQuery","_useState9","_useState10","_useState11","_useState12","recipeOffset","setRecipeOffset","_useState13","_useState14","restaurantOffset","setRestaurantOffset","_useState15","_useState16","setDriveTimes","parseInt","Array","SearchPage_Container","SearchPage_HeadingLayout","SearchPage_NavLayout","SearchPage_NavSelect","SearchPage_NavButton","Math","random","image_url","SearchPage_ItemLayout","SearchPage_RestaurantItemLayout","round","address1","SearchPage_RecipeItemLayout","App","BrowserRouter","Fragment","Route","exact","path","component","HomePage","ListManagementPage","SearchPage","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0OA0BMA,6MACFC,MAAQ,CACJC,KAAM,SACNC,IAAK,wFACLC,SAAU,UACVC,SAAU,UACVC,WAAY,CAAC,OAAQ,aAAc,WAAY,WAC/CC,aAAc,CAAC,SAAU,SAAU,SAAU,8FAG7C,IAAIC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,YACvCC,EAAc,GACdC,EAAe,GACnBN,EAAKO,QAAQC,KAAKC,MAAMC,IAAIC,qBAAqB,GAAGC,MAAMC,QAAQ,SAAAC,GAE9DA,EAAGT,YAAYQ,QAAS,SAAAE,GACpBV,EAAYW,KAAKD,EAAWrB,QAIhCY,EAAaU,KAAKF,EAAGG,QAGzBC,QAAQC,IAAInB,EAAKO,QAAQC,KAAKC,MAAMC,KAEpCF,KAAKY,SAAS,CACV1B,KAAMM,EAAKO,QAAQC,KAAKC,MAAMC,IAAIW,MAClC1B,IAAKK,EAAKO,QAAQC,KAAKC,MAAMC,IAAIY,MACjC1B,SAAUI,EAAKO,QAAQC,KAAKC,MAAMC,IAAIa,mBAAmBC,WAAa,QACtE3B,SAAUG,EAAKO,QAAQC,KAAKC,MAAMC,IAAIe,eAAeD,WAAa,QAClE1B,WAAYO,EACZN,aAAcO,qCAGb,IACEoB,EAAWlB,KAAKC,MAAhBiB,QACP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQK,MACpBJ,EAAAC,EAAAC,cAAA,MAAIC,UAAWJ,EAAQM,QAASxB,KAAKf,MAAMC,MAC3CiC,EAAAC,EAAAC,cAAA,OAAKI,IAAKzB,KAAKf,MAAME,IAAKuC,IAAK1B,KAAKf,MAAMC,KAAMoC,UAAWJ,EAAQS,UACnER,EAAAC,EAAAC,cAAA,KAAGnB,GAAG,YAAWiB,EAAAC,EAAAC,cAAA,6BAAjB,IAA+CrB,KAAKf,MAAMG,UAC1D+B,EAAAC,EAAAC,cAAA,KAAGnB,GAAG,YAAWiB,EAAAC,EAAAC,cAAA,6BAAjB,IAA+CrB,KAAKf,MAAMI,UAC1D8B,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,gCACHF,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMS,WAAS,EAACC,QAAS,GAAIR,UAAWJ,EAAQa,eAC5CZ,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMY,MAAI,EAACC,GAAI,GACXd,EAAAC,EAAAC,cAAA,MAAInB,GAAG,kBACFF,KAAKf,MAAMK,WAAW4C,IAAI,SAACC,EAAEC,GAC1B,OAAIA,EAAI,IAAM,EACHjB,EAAAC,EAAAC,cAAA,MAAIgB,IAAKF,GAAIA,GAEb,SAKvBhB,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMY,MAAI,EAACC,GAAI,GACXd,EAAAC,EAAAC,cAAA,MAAInB,GAAG,mBACFF,KAAKf,MAAMK,WAAW4C,IAAI,SAACC,EAAEC,GAC1B,OAAIA,EAAI,IAAM,EACHjB,EAAAC,EAAAC,cAAA,MAAIC,UAAWJ,EAAQoB,UAAWD,IAAKF,GAAIA,GAE3C,UAM3BhB,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,+BACHF,EAAAC,EAAAC,cAAA,MAAInB,GAAG,gBACFF,KAAKf,MAAMM,aAAa2C,IAAI,SAACC,GAC1B,OAAOhB,EAAAC,EAAAC,cAAA,MAAIgB,IAAKF,GAAIA,cAtEnBI,IAAMC,WAiFhBC,uBAtGA,SAAAC,GAAK,MAAK,CACrBnB,KAAM,CACJoB,SAAU,EACVC,YAAa,IAEfpB,OAAQ,CACJqB,UAAW,EACXC,SAAU,IAEdnB,QAAS,CACLoB,OAAQ,MACRC,MAAO,OAEXjB,cAAe,CACXiB,MAAO,OAEXV,UAAW,CACPU,MAAO,MACPC,WAAY,UAoFLR,CAAmBzD,GCxF5BkE,6MACJjE,MAAQ,CACNC,KAAM,cACNiE,QAAS,qCACTC,MAAO,eACPC,QAAS,kBAeXC,WAAa,WACX,IAAIC,EACF,iCAAmCC,mBAAmBC,EAAKxE,MAAMkE,SACnEO,OAAOC,SAASC,QAAQL,MAE1BM,YAAc,WACZH,OAAOC,SAASC,QAAQH,EAAKxE,MAAMoE,6FAlBnC,IAAI7D,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,gBAAgBI,KAAKC,MAAMC,IAClEiD,EAAU,GACd3D,EAAKmE,SAASG,gBAAgBzD,QAAQ,SAAAC,GACpC6C,GAAW7C,EAAK,MAElBN,KAAKY,SAAS,CACZ1B,KAAMM,EAAKN,KACXiE,QAASA,EACTC,MAAO5D,EAAK4D,MACZC,QAAS7D,EAAKuE,uCAWT,IACC7C,EAAYlB,KAAKC,MAAjBiB,QACR,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQK,MACtBJ,EAAAC,EAAAC,cAAA,MAAIC,UAAWJ,EAAQM,QAASxB,KAAKf,MAAMC,MAC3CiC,EAAAC,EAAAC,cAAA,KAAGnB,GAAG,WACJiB,EAAAC,EAAAC,cAAA,0BAA0B,IAC1BF,EAAAC,EAAAC,cAAA,UAAQ2C,QAAShE,KAAKsD,WAAYhC,UAAWJ,EAAQ+C,WAClDjE,KAAKf,MAAMkE,UAGhBhC,EAAAC,EAAAC,cAAA,KAAGnB,GAAG,UACJiB,EAAAC,EAAAC,cAAA,gCACCrB,KAAKf,MAAMmE,OAEdjC,EAAAC,EAAAC,cAAA,KAAGnB,GAAG,WACJiB,EAAAC,EAAAC,cAAA,2BAA2B,IAC3BF,EAAAC,EAAAC,cAAA,UAAQ2C,QAAShE,KAAK6D,YAAavC,UAAWJ,EAAQ+C,WACnDjE,KAAKf,MAAMoE,kBA9CKd,IAAMC,WAyDpBC,uBAxEA,SAAAC,GAAK,MAAK,CACvBnB,KAAM,CACJoB,SAAU,EACVC,YAAa,IAEfpB,OAAQ,CACNqB,UAAW,EACXC,SAAU,IAEZmB,UAAW,CACTC,UAAW,CACTC,OAAQ,cA6DC1B,CAAmBS,GC9D5BkB,mLACK,IACClD,EAAYlB,KAAKC,MAAjBiB,QACR,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQK,MACY,WAAjCvB,KAAKC,MAAMoE,MAAMC,OAAOpF,KAAoBiC,EAAAC,EAAAC,cAACkD,EAAD,CAAYrE,GAAIF,KAAKC,MAAMoE,MAAMC,OAAOpE,KAAQiB,EAAAC,EAAAC,cAACmD,EAAD,CAAgBtE,GAAIF,KAAKC,MAAMoE,MAAMC,OAAOpE,aALzHqC,IAAMC,WAcfC,uBArBA,SAAAC,GAAK,MAAK,CACvBnB,KAAM,CACJoB,SAAU,EACVE,UAAW,MAkBAJ,CAAmBgC,YAAWL,iCC1BvCM,EAAgBnC,IAAMoC,cAAc,CAAEC,KAAM,SAEpBF,EAAcG,SACdH,EAAcI,2fCC5C,IAEMC,EAAaC,IAAOC,IAAVC,KAMVC,EAAeH,IAAOC,IAAVG,KAKZC,EAAcL,IAAOM,MAAVC,KAKXC,EAAeR,IAAOS,OAAVC,KA8JHjB,cAxJA,SAAAxE,GAAS,IAAA0F,EACgBC,mBAAS,IADzBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACfK,EADeH,EAAA,GACFI,EADEJ,EAAA,GAAAK,EAEcN,mBAAS,GAFvBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEfE,EAFeD,EAAA,GAEHE,EAFGF,EAAA,GAAAG,EAGQV,oBAAS,GAHjBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGfE,EAHeD,EAAA,GAGNE,EAHMF,EAAA,GAKhBG,EAAY,WACZN,EAAa,EACfO,MAAM,oCAIRF,GAAW,GAeXG,MAAK,GAAAC,OAlDU,wBAkDV,yBAAAA,OACkCb,EADlC,gBAAAa,OAC4DT,IAE9DU,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAG,GACJtH,aAAauH,QAAQ,gBAAiBzH,KAAK0H,UAAUF,IAErD,IAAIG,EAAU3H,KAAKC,MAAMC,aAAaC,QAAQ,YAC9C,GAAe,MAAXwH,EACFA,EAAUzH,aAAaC,QAAQ,iBAC/BD,aAAauH,QAAQ,UAAWE,GAChCzH,aAAauH,QAAQ,cAAe,SAC/B,KAAAG,EACDC,EAAa7H,KAAKC,MAAMC,aAAaC,QAAQ,kBAE7C2H,GADJH,EAAU3H,KAAKC,MAAMC,aAAaC,QAAQ,aAChBG,QAAQyH,OAClC7H,aAAauH,QAAQ,cAAeK,EAAYvG,aAChDqG,EAAAD,EAAQrH,SAAQS,KAAhBiH,MAAAJ,EAAAvB,OAAA4B,EAAA,EAAA5B,CAAwBwB,EAAWvH,UACnCJ,aAAauH,QAAQ,UAAWzH,KAAK0H,UAAUC,OAGlDN,KAAK,WACJF,MAAK,GAAAC,OAxEM,wBAwEN,6BAAAA,OACsCb,EADtC,gBAAAa,OACgET,IAElEU,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAG,GACJtH,aAAauH,QACX,oBACAzH,KAAK0H,UAAUF,EAAKU,aAGtB,IAAIC,EAAcnI,KAAKC,MAAMC,aAAaC,QAAQ,gBAClD,GAAmB,MAAfgI,EACFA,EAAcjI,aAAaC,QAAQ,qBACnCD,aAAauH,QAAQ,cAAeU,GACpCjI,aAAauH,QAAQ,kBAAmB,SACnC,KAAAW,EACDC,EAAiBrI,KAAKC,MACxBC,aAAaC,QAAQ,sBAGnBmI,GADJH,EAAcnI,KAAKC,MAAMC,aAAaC,QAAQ,iBACZ4H,OAClC7H,aAAauH,QACX,kBACAa,EAAgB/G,aAElB6G,EAAAD,GAAYpH,KAAZiH,MAAAI,EAAA/B,OAAA4B,EAAA,EAAA5B,CAAoBgC,IACpBnI,aAAauH,QAAQ,cAAezH,KAAK0H,UAAUS,SAI1Dd,KAAK,WAEqC,MAArCnH,aAAaC,QAAQ,cACvBD,aAAauH,QACX,YACAzH,KAAK0H,UAAU,CACbC,QAAS,GACTQ,YAAa,MAIuB,MAAtCjI,aAAaC,QAAQ,eACvBD,aAAauH,QACX,aACAzH,KAAK0H,UAAU,CACbC,QAAS,GACTQ,YAAa,MAIwB,MAAvCjI,aAAaC,QAAQ,gBACvBD,aAAauH,QACX,cACAzH,KAAK0H,UAAU,CACbC,QAAS,GACTQ,YAAa,QAKpBd,KAAK,WACJnH,aAAauH,QAAQ,QAASlB,GACZvG,KAAKC,MAAMC,aAAaC,QAAQ,gBACpCH,KAAKC,MAAMC,aAAaC,QAAQ,YAC9C8D,OAAOsE,WAAW,WAChB/H,EAAMgI,QAAQzH,KAAK,YAClB,SAIT,OACEW,EAAAC,EAAAC,cAAC0D,EAAD,KACE5D,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAC8D,EAAD,KACEhE,EAAAC,EAAAC,cAAA,QACE6G,SAAU,SAAAC,GACRA,EAAMC,iBACN1B,MAGFvF,EAAAC,EAAAC,cAACgE,EAAD,CACEgD,MAAOrC,EACP9F,GAAG,SACHoI,YAAY,aACZC,SAAU,SAAAJ,GACRlC,EAAekC,EAAMK,OAAOH,UAGhClH,EAAAC,EAAAC,cAACgE,EAAD,CACEgD,MAAOjC,EACPlG,GAAG,aACHuI,WAAS,qCACTF,SAAU,SAAAJ,GACR9B,EAAc8B,EAAMK,OAAOH,UAG/BlH,EAAAC,EAAAC,cAACmE,EAAD,CAAcxB,QAAS0C,GAAvB,cAGHF,EAAUrF,EAAAC,EAAAC,cAAA,uBAAoB,smCC5KrC,IAAIqH,EAAY1D,IAAOC,IAAV0D,KAKPC,EAAgB5D,IAAOC,IAAV4D,KAObC,EAAY9D,IAAOC,IAAV8D,KAMTC,EAAYhE,IAAOiE,OAAVC,KAKTC,EAAYnE,IAAOS,OAAV2D,KAKTC,EAAarE,IAAOC,IAAVqE,IAMM,SAAArJ,GAAK,OAAKA,EAAMsJ,KAAO,OAAS,YAGhDC,EAAuBxE,IAAOC,IAAVwE,KAIpBC,GAAmB1E,IAAOC,IAAV0E,KAgHPlF,eA1GU,SAAAxE,GAAS,IAAA0F,EAEFC,oBAAS,GAFPC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEzBa,EAFyBX,EAAA,GAEhBY,EAFgBZ,EAAA,GAAAK,EAGQN,mBAAS,IAHjBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAGzB0D,EAHyBzD,EAAA,GAGX0D,EAHW1D,EAAA,GAAAG,EAIFV,mBAAS,CAAE7F,QAAS,CAAC,MAJnBwG,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAIzBc,EAJyBb,EAAA,GAIhBuD,EAJgBvD,EAAA,GAAAwD,EAKMnE,mBAAS,IALfoE,EAAAlE,OAAAC,EAAA,EAAAD,CAAAiE,EAAA,GAKzBnC,EALyBoC,EAAA,GAKZC,EALYD,EAAA,GAuGhC,OA/FAE,oBAAU,WACR,IAAIC,EAAsB1K,KAAKC,MAC7BC,aAAaC,QAAQK,EAAMoE,MAAMC,OAAO8F,OAE1C1J,QAAQC,IAAIwJ,GACZA,EAAsBA,EAAoB/C,QAC1C0C,EAAWK,GAEX,IAAIE,EAA0B5K,KAAKC,MACjCC,aAAaC,QAAQK,EAAMoE,MAAMC,OAAO8F,OAE1CC,EAA0BA,EAAwBzC,YAClDqC,EAAeI,GAEf5D,GAAW,IACV,IAEWD,EACZrF,EAAAC,EAAAC,cAAA,uBAEAF,EAAAC,EAAAC,cAACqH,EAAD,KACEvH,EAAAC,EAAAC,cAACuH,EAAD,KACEzH,EAAAC,EAAAC,cAAA,UAAKpB,EAAMoE,MAAMC,OAAO8F,MACxBjJ,EAAAC,EAAAC,cAACyH,EAAD,KACE3H,EAAAC,EAAAC,cAAC2H,EAAD,CACET,SAAU,SAAAJ,GAAK,OAAI0B,EAAgB1B,EAAMK,OAAOH,QAChDiC,aAAa,IAEbnJ,EAAAC,EAAAC,cAAA,UAAQgH,MAAM,GAAGkC,OAAO,WACxBpJ,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,8BAEFF,EAAAC,EAAAC,cAAC8H,EAAD,CACEnF,QAAS,WACc,KAAjB4F,GACF3J,EAAMgI,QAAQzH,KAAd,UAAAqG,OAA6B+C,MAHnC,gBASAzI,EAAAC,EAAAC,cAAC8H,EAAD,CAAWnF,QAAS,kBAAM/D,EAAMgI,QAAQzH,KAAK,aAA7C,qBAGAW,EAAAC,EAAAC,cAAC8H,EAAD,CACEnF,QAAS,WACP/D,EAAMgI,QAAQzH,KAAK,OAFvB,sBAUH4G,EAAQlF,IAAI,SAACsI,EAAQC,GACpB,IAAIC,EAAajL,KAAKC,MAAMC,aAAaC,QAAQ,YAE7CoC,GADJ0I,EAAaA,EAAW3K,SACFyK,GACtB,OACErJ,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAMC,GAAE,WAAA/D,OAAa2D,GAAUnI,IAAK,UAAYoI,GAC9CtJ,EAAAC,EAAAC,cAACgI,EAAD,CAAYE,KAAMkB,EAAM,IAAM,GAC5BtJ,EAAAC,EAAAC,cAACqI,GAAD,KACEvI,EAAAC,EAAAC,cAAA,UAAKW,EAAKnB,OACVM,EAAAC,EAAAC,cAAA,iBACQ,IACLW,EAAKjB,mBAAqBiB,EAAKjB,mBAAqB,IAAK,IAF5D,WAKAI,EAAAC,EAAAC,cAAA,kBAAUW,EAAK6I,eAAf,aAEF1J,EAAAC,EAAAC,cAAA,cAAMW,EAAK8I,gBAAkB,SAKpClD,EAAY1F,IAAI,SAAC6I,EAAYN,GAC5B,IAAIO,EAAS5D,EAAQI,OAAS,IAAM,EAAIiD,EAAM,IAAM,EAAIA,EAAM,IAAM,EAEhEzI,EADiBvC,KAAKC,MAAMC,aAAaC,QAAQ,gBAC3BmL,GAC1B,OACE5J,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAMC,GAAE,eAAA/D,OAAiBkE,GAAc1I,IAAK,cAAgBoI,GAC1DtJ,EAAAC,EAAAC,cAACgI,EAAD,CAAYE,KAAMyB,GAChB7J,EAAAC,EAAAC,cAACmI,EAAD,KACErI,EAAAC,EAAAC,cAAA,UAAKW,EAAK9C,MACViC,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,WAEFF,EAAAC,EAAAC,cAAA,UAAKW,EAAKiJ,0EC1HlBC,8MACFjM,MAAQ,CACJoJ,MAAO,GACP8C,MAAM,KAEVC,aAAe,SAAAjJ,GACXsB,EAAK7C,SAAS,CACVyH,MAAOlG,EAAEqG,OAAOH,WAGxBgD,UAAY,WACR,IAAMjB,EAAO3G,EAAKxE,MAAMoJ,MACxB,GAAa,cAAT+B,EAAsB,CACtB,IAAI9E,EAAQ7F,KAAKC,MAAMC,aAAaC,QAAQ,cACxC6D,EAAKxD,MAAM8K,YACVzF,EAAMsC,YAAY0D,SAAS7H,EAAKxD,MAAMC,KAAOoF,EAAMsC,YAAYpH,KAAKiD,EAAKxD,MAAMC,KAE/EoF,EAAM8B,QAAQkE,SAAS7H,EAAKxD,MAAMC,KAAOoF,EAAM8B,QAAQ5G,KAAKiD,EAAKxD,MAAMC,IAE5EP,aAAauH,QAAQ,YAAazH,KAAK0H,UAAU7B,SAC9C,GAAa,eAAT8E,EAAuB,CAC9B,IAAI9E,EAAQ7F,KAAKC,MAAMC,aAAaC,QAAQ,eACxC6D,EAAKxD,MAAM8K,YACVzF,EAAMsC,YAAY0D,SAAS7H,EAAKxD,MAAMC,KAAOoF,EAAMsC,YAAYpH,KAAKiD,EAAKxD,MAAMC,KAE/EoF,EAAM8B,QAAQkE,SAAS7H,EAAKxD,MAAMC,KAAOoF,EAAM8B,QAAQ5G,KAAKiD,EAAKxD,MAAMC,IAE5EP,aAAauH,QAAQ,aAAczH,KAAK0H,UAAU7B,SAC/C,GAAa,gBAAT8E,EAAwB,CAC/B,IAAI9E,EAAQ7F,KAAKC,MAAMC,aAAaC,QAAQ,gBACxC6D,EAAKxD,MAAM8K,YACVzF,EAAMsC,YAAY0D,SAAS7H,EAAKxD,MAAMC,KAAOoF,EAAMsC,YAAYpH,KAAKiD,EAAKxD,MAAMC,KAE/EoF,EAAM8B,QAAQkE,SAAS7H,EAAKxD,MAAMC,KAAOoF,EAAM8B,QAAQ5G,KAAKiD,EAAKxD,MAAMC,IAE5EP,aAAauH,QAAQ,cAAezH,KAAK0H,UAAU7B,IAEvD5E,QAAQC,IAAIhB,iBAEhB4L,SAAW,WACP9H,EAAKxD,MAAMgI,QAAQzH,KAAK,cAE5BgL,cAAgB,WACZ/H,EAAKxD,MAAM8K,WAAatH,EAAKxD,MAAMgI,QAAQzH,KAAK,qBAAuBiD,EAAKxD,MAAMC,IAAMuD,EAAKxD,MAAMgI,QAAQzH,KAAK,iBAAmBiD,EAAKxD,MAAMC,6EAEzI,IACEgB,EAAWlB,KAAKC,MAAhBiB,QACP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQK,MACpBJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACoK,GAAArK,EAAD,CACIE,UAAWJ,EAAQuE,OACnBiG,QAAQ,YACR1H,QAAShE,KAAKwL,eAHlB,mBAQJrK,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACoK,GAAArK,EAAD,CAAQE,UAAWJ,EAAQuE,OAAQiG,QAAQ,YAAY1H,QAAShE,KAAKuL,UAArE,mBACLpK,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACsK,GAAAvK,EAAD,CAAaE,UAAWJ,EAAQ0K,MAC5BzK,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CACIiH,MAAOrI,KAAKf,MAAMoJ,MAClBE,SAAUvI,KAAKoL,aACf9J,UAAWJ,EAAQ4K,UAEnB3K,EAAAC,EAAAC,cAAA,UAAQgH,MAAM,GAAG0D,UAAQ,IAGzB5K,EAAAC,EAAAC,cAAA,UAAQgH,MAAO,aAAf,aACAlH,EAAAC,EAAAC,cAAA,UAAQgH,MAAO,cAAf,cACAlH,EAAAC,EAAAC,cAAA,UAAQgH,MAAO,eAAf,kBAIZlH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACoK,GAAArK,EAAD,CAAQE,UAAWJ,EAAQuE,OAAQiG,QAAQ,YAAY1H,QAAShE,KAAKqL,WAArE,wBA3EK9I,IAAMC,WAqFjBC,wBAvGA,SAAAC,GAAK,MAAK,CACrBnB,KAAM,CACFoB,SAAU,EACVqJ,aAAc,IAElBvG,OAAQ,CACJwG,aAAc,GACdjJ,MAAO,QAEX8I,SAAU,CACNG,aAAc,GACdjJ,MAAO,QAEX4I,KAAM,CACF5I,MAAO,UAyFAP,CAAmByI,IC1F5BgB,oLACK,IACChL,EAAYlB,KAAKC,MAAjBiB,QACR,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQK,KAAMrB,GAAG,mBAC/BiB,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMS,WAAS,EAACC,QAAS,IACvBX,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMY,MAAI,EAACC,GAAI,GAAIX,UAAWJ,EAAQiL,MACpChL,EAAAC,EAAAC,cAACmD,EAAD,CAAgBtE,GAAIF,KAAKC,MAAMoE,MAAMC,OAAOpE,MAE9CiB,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMY,MAAI,EAACC,GAAI,EAAGX,UAAWJ,EAAQkL,OACnCjL,EAAAC,EAAAC,cAACgL,GAAD,CACEC,OAAO,kBACPvB,YAAY,EACZ7K,GAAIF,KAAKC,MAAMoE,MAAMC,OAAOpE,GAC5B+H,QAASjI,KAAKC,MAAMgI,oBAdL1F,IAAMC,WA0BpBC,wBAvCA,SAAAC,GAAK,MAAK,CACvBnB,KAAM,CACJoB,SAAU,EACVE,UAAW,IAEbsJ,KAAM,CACJI,QAA8B,EAArB7J,EAAMZ,QAAQ0K,MAEzBJ,MAAO,CACLG,QAA8B,EAArB7J,EAAMZ,QAAQ0K,QA8BZ/J,CAAmBgC,YAAWyH,KC1BvCO,oLACO,IACEvL,EAAWlB,KAAKC,MAAhBiB,QACP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQK,KAAMrB,GAAG,eAC7BiB,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMS,WAAS,EAACC,QAAS,IACrBX,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMY,MAAI,EAACC,GAAI,GAAIX,UAAWJ,EAAQiL,MAClChL,EAAAC,EAAAC,cAACkD,EAAD,CAAYrE,GAAIF,KAAKC,MAAMoE,MAAMC,OAAOpE,MAE5CiB,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMY,MAAI,EAACC,GAAI,EAAGX,UAAWJ,EAAQkL,OACjCjL,EAAAC,EAAAC,cAACgL,GAAD,CAAaC,OAAO,cAAcvB,YAAY,EAAO7K,GAAIF,KAAKC,MAAMoE,MAAMC,OAAOpE,GAAI+H,QAASjI,KAAKC,MAAMgI,oBAVxG1F,IAAMC,WAsBhBC,wBAnCA,SAAAC,GAAK,MAAK,CACrBnB,KAAM,CACJoB,SAAU,EACVE,UAAW,IAEbsJ,KAAM,CACFI,QAA8B,EAArB7J,EAAMZ,QAAQ0K,MAE3BJ,MAAO,CACHG,QAA8B,EAArB7J,EAAMZ,QAAQ0K,QA0BhB/J,CAAmBgC,YAAWgI,ktDCrC7C,IAAI/D,GAAY1D,IAAOC,IAAVyH,MAKTC,GAAe3H,IAAOC,IAAV2H,MAOVvD,GAAarE,IAAOC,IAAV4H,KAMM,SAAA5M,GAAK,OAAKA,EAAMsJ,KAAO,OAAS,YAGhDC,GAAuBxE,IAAOC,IAAV6H,MAKpBC,GAAgB/H,IAAOC,IAAV+H,MAKbtD,GAAmB1E,IAAOC,IAAVgI,MAKhBrE,GAAgB5D,IAAOC,IAAViI,MAObpE,GAAY9D,IAAOC,IAAVkI,MAMTnE,GAAYhE,IAAOiE,OAAVmE,MAKTjE,GAAYnE,IAAOS,OAAV4H,MAKTC,GAAWtI,IAAOC,IAAVsI,MAORC,GAAQxI,IAAO7F,IAAVsO,KAGF,SAAAxN,GAAK,OAAIA,EAAMyN,KACd,SAAAzN,GAAK,OAAIA,EAAMkM,MACH,SAAAlM,GAAK,OAAIA,EAAM0N,MA6JtBlJ,eAzJE,SAAAxE,GAAS,IAAA0F,EACcC,mBAAS,CAAC,KADxBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACjBiC,EADiB/B,EAAA,GACJoE,EADIpE,EAAA,GAAAK,EAEMN,mBAAS,CAAE7F,QAAS,CAAC,MAF3BoG,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEjBkB,EAFiBjB,EAAA,GAER2D,EAFQ3D,EAAA,GAAAG,EAGEV,mBAAS,IAHXW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGjBsH,EAHiBrH,EAAA,GAGVsH,EAHUtH,EAAA,GAAAwD,EAIgBnE,mBAAS,IAJzBoE,EAAAlE,OAAAC,EAAA,EAAAD,CAAAiE,EAAA,GAIjBH,EAJiBI,EAAA,GAIHH,EAJGG,EAAA,GAAA8D,EAKMlI,oBAAS,GALfmI,EAAAjI,OAAAC,EAAA,EAAAD,CAAAgI,EAAA,GAKjBtH,EALiBuH,EAAA,GAKRtH,EALQsH,EAAA,GAAAC,EAMgBpI,mBAAS,GANzBqI,EAAAnI,OAAAC,EAAA,EAAAD,CAAAkI,EAAA,GAMjBE,EANiBD,EAAA,GAMHE,EANGF,EAAA,GAAAG,EAOwBxI,mBAAS,GAPjCyI,EAAAvI,OAAAC,EAAA,EAAAD,CAAAsI,EAAA,GAOjBE,EAPiBD,EAAA,GAOCE,EAPDF,EAAA,GAAAG,EAQY5I,mBAAS,IARrB6I,EAAA3I,OAAAC,EAAA,EAAAD,CAAA0I,EAAA,GAQLE,GARKD,EAAA,GAAAA,EAAA,IAsJxB,OA3IAvE,oBAAU,WACR,IAAIC,EAAsB1K,KAAKC,MAAMC,aAAaC,QAAQ,kBACtDyK,EAA0B5K,KAAKC,MACjCC,aAAaC,QAAQ,sBAEnBmI,EAAkB4G,SAAShP,aAAaC,QAAQ,oBAChD2H,EAAcoH,SAAShP,aAAaC,QAAQ,gBAChDqK,EAAeI,GACfkE,EAAoBxG,GACpB+B,EAAWK,GACXgE,EAAgB5G,GAChBsG,EAASlO,aAAaC,QAAQ,UAC9B8O,EAAc,IAAIE,MAAMhH,EAAYJ,SACpCf,GAAW,IACV,IAEWD,EACZrF,EAAAC,EAAAC,cAAA,yBAEAF,EAAAC,EAAAC,cAACwN,GAAD,KACGnO,QAAQC,IAAIiH,GACZlH,QAAQC,IAAIyG,GACbjG,EAAAC,EAAAC,cAACyN,GAAD,KACE3N,EAAAC,EAAAC,cAAA,gCAAwBuM,GACxBzM,EAAAC,EAAAC,cAAC0N,GAAD,KACE5N,EAAAC,EAAAC,cAAC2N,GAAD,CACEzG,SAAU,SAAAJ,GAAK,OAAI0B,EAAgB1B,EAAMK,OAAOH,QAChDnI,GAAG,QACHoK,aAAa,IAEbnJ,EAAAC,EAAAC,cAAA,UAAQgH,MAAM,GAAGkC,OAAO,WACxBpJ,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,8BAEFF,EAAAC,EAAAC,cAAC4N,GAAD,CACEjL,QAAS,WACc,KAAjB4F,GACF3J,EAAMgI,QAAQzH,KAAd,UAAAqG,OAA6B+C,MAHnC,gBASAzI,EAAAC,EAAAC,cAAC4N,GAAD,CACEjL,QAAS,WACP/D,EAAMgI,QAAQzH,KAAK,OAFvB,sBAUJW,EAAAC,EAAAC,cAACiM,GAAD,CAAUpN,GAAG,WACVkH,EAAQrH,QAAQmC,IAAI,SAACsI,EAAQC,GAC5B,OACEtJ,EAAAC,EAAAC,cAACmM,GAAD,CACEnL,IAAK,gBAAkBoI,EACrBvK,GAAE,gBAAA2G,OAAkB4D,GACtB0B,KAAM+C,KAAKC,UAAY1E,EAAM,IAC7BiD,IAAKwB,KAAKC,UAAY1E,EAAM,IAC5BkD,IAAKuB,KAAKC,UAAY1E,EAAM,IAC5BhJ,IAAK+I,EAAO1J,UAIjB8G,EAAY1F,IAAI,SAAC6I,EAAYN,GAE5B,OADE/J,QAAQC,IAAIoK,GAEZ5J,EAAAC,EAAAC,cAACmM,GAAD,CACEnL,IAAK,oBAAsBoI,EAC3BvK,GAAE,oBAAA2G,OAAsB4D,GACxB0B,KAAM+C,KAAKC,UAAY1E,EAAM,IAC7BiD,IAAKwB,KAAKC,UAAY1E,EAAM,IAC5BkD,KAAMuB,KAAKC,UAAY1E,EAAM,IAC7BhJ,IAAKsJ,EAAWqE,eAMxBjO,EAAAC,EAAAC,cAACsL,GAAD,KACExL,EAAAC,EAAAC,cAAA,OAAKnB,GAAG,mBACNiB,EAAAC,EAAAC,cAAA,yBACCuG,EAAY1F,IAAI,SAAC6I,EAAYN,GAC5B,IAAIO,EACFpD,EAAYJ,OAAS,IAAM,EAAIiD,EAAM,IAAM,EAAIA,EAAM,IAAM,EAE7D,OACEtJ,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CACEC,GAAE,eAAA/D,OAAiB4D,EAAM6D,GACzBjM,IAAG,cAAAwE,OAAgB4D,GACnBvK,GAAE,cAAA2G,OAAgB4D,IAElBtJ,EAAAC,EAAAC,cAACgO,GAAD,CAAY9F,KAAMyB,GAChB7J,EAAAC,EAAAC,cAACiO,GAAD,KACEnO,EAAAC,EAAAC,cAAA,MAAInB,GAAG,kBAAkB6K,EAAW7L,MACpCiC,EAAAC,EAAAC,cAAA,KAAGnB,GAAG,SAASgP,KAAKK,MAAsB,GAAhBL,KAAKC,UAA/B,aAEFhO,EAAAC,EAAAC,cAAC0L,GAAD,CAAe7M,GAAG,WACb6K,EAAWpH,SAAS6L,UAEzBrO,EAAAC,EAAAC,cAAA,UAAK0J,EAAWE,YAM1B9J,EAAAC,EAAAC,cAAA,OAAKnB,GAAG,eACNiB,EAAAC,EAAAC,cAAA,qBACC+F,EAAQrH,QAAQmC,IAAI,SAACsI,EAAQC,GAC5B,IAAIO,EACFpD,EAAYJ,OAAS,IAAM,EAAIiD,EAAM,IAAM,EAAIA,EAAM,IAAM,EAC7D,OACEtJ,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAMC,GAAE,WAAA/D,OAAa4D,EAAMyD,GAAgB7L,IAAG,UAAAwE,OAAY4D,GAAOvK,GAAE,UAAA2G,OAAY4D,IAC7EtJ,EAAAC,EAAAC,cAACgO,GAAD,CAAY9F,KAAMyB,GAChB7J,EAAAC,EAAAC,cAACoO,GAAD,KACEtO,EAAAC,EAAAC,cAAA,MAAInB,GAAG,cAAcsK,EAAO3J,OAC5BM,EAAAC,EAAAC,cAAA,KAAGnB,GAAG,QAAN,cACc,IACXsK,EAAOzJ,mBACJyJ,EAAOzJ,mBACP,IAAK,IAJX,YAQFI,EAAAC,EAAAC,cAAC0L,GAAD,KACI5L,EAAAC,EAAAC,cAAA,KAAGnB,GAAG,QAAN,cAAyBsK,EAAOK,eAAhC,aAEJ1J,EAAAC,EAAAC,cAAA,cAAMmJ,EAAOM,gBAAkB,cClMlC4E,oLAjBX,OACEvO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACsO,EAAA,EAAD,KACExO,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwO,SAAA,KACEzO,EAAAC,EAAAC,cAACwO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC9O,EAAAC,EAAAC,cAACwO,EAAA,EAAD,CAAOE,KAAK,eAAeC,UAAWE,KACtC/O,EAAAC,EAAAC,cAACwO,EAAA,EAAD,CAAOE,KAAK,kBAAkBC,UAAW9D,KACzC/K,EAAAC,EAAAC,cAACwO,EAAA,EAAD,CAAOE,KAAK,cAAcC,UAAWvD,KACrCtL,EAAAC,EAAAC,cAACwO,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWG,KACjChP,EAAAC,EAAAC,cAACwO,EAAA,EAAD,CAAOE,KAAK,mBAAmBC,UAAW5L,cAXpC5B,aCGE4N,QACW,cAA7B1M,OAAOC,SAAS0M,UAEe,UAA7B3M,OAAOC,SAAS0M,UAEhB3M,OAAOC,SAAS0M,SAAShM,MACvB,2DCZNiM,IAASC,OAAOpP,EAAAC,EAAAC,cAACmP,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/J,KAAK,SAAAgK,GACjCA,EAAaC","file":"static/js/main.10d370a7.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = theme => ({\n    root: {\n      flexGrow: 1,\n      paddingLeft: 30\n    },\n    header: {\n        marginTop: 0,\n        fontSize: 50\n    },\n    imgSize: {\n        height: '30%',\n        width: '30%'\n    },\n    containerGrid: {\n        width: '50%'\n    },\n    textRight: {\n        width: '40%',\n        marginLeft: 'auto'\n    }\n});\nclass RecipeInfo extends React.Component {\n    state = {\n        name: 'Burger',\n        img: 'https://www.epicurus.com/food/recipes/wp-content/uploads/2011/09/bbq-cheeseburger.jpg',\n        preptime: '10 mins',\n        cookTime: '20 mins',\n        Ingredient: ['buns', 'beef patty', 'tomatoes', 'ketchup'],\n        Instructions: ['step 1', 'step 2', 'step 3', 'step 4']\n    };\n    componentDidMount() {\n        let info = JSON.parse(localStorage.getItem('recipes'));\n        let ingredients = [];\n        let instructions = [];\n        info.results[this.props.id].analyzedInstructions[0].steps.forEach(el => {\n            // parse ingredients\n            el.ingredients.forEach( ingredient => {\n                ingredients.push(ingredient.name);\n            });\n\n            // parse instructions\n            instructions.push(el.step);\n        });\n\n        console.log(info.results[this.props.id]);\n\n        this.setState({\n            name: info.results[this.props.id].title,\n            img: info.results[this.props.id].image,\n            preptime: info.results[this.props.id].preparationMinutes.toString() + ' mins',\n            cookTime: info.results[this.props.id].cookingMinutes.toString() + ' mins',\n            Ingredient: ingredients,\n            Instructions: instructions\n        })\n    }\n    render() {\n        const {classes} = this.props;\n        return (\n            <div className={classes.root}>\n                <h1 className={classes.header}>{this.state.name}</h1>\n                <img src={this.state.img} alt={this.state.name} className={classes.imgSize} />\n                <p id=\"prepTime\"><strong>Prep time: </strong> {this.state.preptime}</p>\n                <p id=\"cookTime\"><strong>Cook time: </strong> {this.state.cookTime}</p>\n                <p><strong>Ingredients: </strong></p>\n                <Grid container spacing={24} className={classes.containerGrid}>\n                    <Grid item xs={6}>\n                        <ul id=\"ingredientLeft\">\n                            {this.state.Ingredient.map((e,i) => {\n                                if (i % 2 === 0) {\n                                    return <li key={e}>{e}</li>\n                                } else {\n                                    return null\n                                }\n                            })}\n                        </ul>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <ul id=\"ingredientRight\">\n                            {this.state.Ingredient.map((e,i) => {\n                                if (i % 2 !== 0) {\n                                    return <li className={classes.textRight} key={e}>{e}</li>\n                                } else {\n                                    return null\n                                }\n                            })}\n                        </ul>\n                    </Grid>\n                </Grid>\n                <p><strong>Instructions</strong></p>\n                <ol id=\"instructions\">\n                    {this.state.Instructions.map((e) => {\n                        return <li key={e}>{e}</li>\n                    })}\n                </ol>\n            </div>\n        ); \n    }\n}\n\nRecipeInfo.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\nexport default withStyles(styles)(RecipeInfo);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    paddingLeft: 30\n  },\n  header: {\n    marginTop: 0,\n    fontSize: 50\n  },\n  hoverText: {\n    \"&:hover\": {\n      cursor: \"pointer\"\n    }\n  }\n});\nclass RestaurantInfo extends React.Component {\n  state = {\n    name: \"Burger King\",\n    address: \"1103 N Pass Ave, Burbank, CA 91505\",\n    phone: \"818-445-7919\",\n    website: \"facebook.com\"\n  };\n  componentDidMount() {\n    let info = JSON.parse(localStorage.getItem(\"restaurants\"))[this.props.id];\n    let address = \"\";\n    info.location.display_address.forEach(el => {\n      address += el + \" \";\n    });\n    this.setState({\n      name: info.name,\n      address: address,\n      phone: info.phone,\n      website: info.url\n    });\n  }\n  openGoogle = () => {\n    let link =\n      \"http://maps.google.com/maps?q=\" + encodeURIComponent(this.state.address);\n    window.location.replace(link);\n  };\n  openWebsite = () => {\n    window.location.replace(this.state.website);\n  };\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <h1 className={classes.header}>{this.state.name}</h1>\n        <p id=\"address\">\n          <strong>Address:</strong>{\" \"}\n          <button onClick={this.openGoogle} className={classes.hoverText}>\n            {this.state.address}\n          </button>\n        </p>\n        <p id=\"number\">\n          <strong>Phone Number: </strong>\n          {this.state.phone}\n        </p>\n        <p id=\"website\">\n          <strong>Website: </strong>{\" \"}\n          <button onClick={this.openWebsite} className={classes.hoverText}>\n            {this.state.website}\n          </button>\n        </p>\n      </div>\n    );\n  }\n}\n\nRestaurantInfo.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(RestaurantInfo);\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport RecipeInfo from \"./sub-components/RecipeInfo\";\nimport RestaurantInfo from \"./sub-components/RestaurantInfo\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 10\n  }\n});\n\nclass PrintPage extends React.Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        {this.props.match.params.name === \"recipe\" ? <RecipeInfo id={this.props.match.params.id}/> : <RestaurantInfo id={this.props.match.params.id}/>}\n      </div>\n    );\n  }\n}\n\nPrintPage.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(withRouter(PrintPage));","import React from \"react\";\n\nconst HungryContext = React.createContext({ test: \"test\" });\n\nexport const HungryProvider = HungryContext.Provider;\nexport const HungryConsumer = HungryContext.Consumer;\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { HungryProvider, HungryConsumer } from \"./Context\";\n\nconst url_prefix = \"http://localhost:8080\";\n\nconst PageLayout = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst SearchLayout = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst SearchInput = styled.input`\n  background-color: white;\n  margin: 5px;\n`;\n\nconst SearchButton = styled.button`\n  background-color: red;\n  color: white;\n  margin: 5px;\n`;\n\nlet HomePage = props => {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [numResults, setNumResults] = useState(5);\n  const [loading, setLoading] = useState(false);\n\n  const sendQuery = () => {\n    if (numResults < 1) {\n      alert(\"Results must be greater than 1!\");\n      return;\n    }\n\n    setLoading(true);\n\n    /* let fetchDrivetime =  (to, idx) => {\n         *     return fetch(\n         *         `http://www.mapquestapi.com/directions/v2/route?key=M0uBDKuMB2ap4E5dt1gMTkXqj7eYeAgc&from=USC,Los Angeles,CA&to=${\n         *         to.address1\n           },${to.city},${to.state}`\n         *     ).then(resp => resp.json()).then(data => {\n         *         let update = driveTimes;\n         *         update[idx] = data.route.formattedTime;\n         *         setDriveTimes(update);\n         *     });\n         * };\n         */\n\n    fetch(\n      `${url_prefix}/RecipeServlet?query=${searchQuery}&numResults=${numResults}`\n    )\n      .then(resp => resp.json())\n      .then(data => {\n        localStorage.setItem(\"searchRecipes\", JSON.stringify(data));\n\n        let recipes = JSON.parse(localStorage.getItem(\"recipes\"));\n        if (recipes == null) {\n          recipes = localStorage.getItem(\"searchRecipes\");\n          localStorage.setItem(\"recipes\", recipes);\n          localStorage.setItem(\"recipeIndex\", \"0\");\n        } else {\n          let newRecipes = JSON.parse(localStorage.getItem(\"searchRecipes\"));\n          recipes = JSON.parse(localStorage.getItem(\"recipes\"));\n          let recipeIndex = recipes.results.length;\n          localStorage.setItem(\"recipeIndex\", recipeIndex.toString());\n          recipes.results.push(...newRecipes.results);\n          localStorage.setItem(\"recipes\", JSON.stringify(recipes));\n        }\n      })\n      .then(() => {\n        fetch(\n          `${url_prefix}/RestaurantServlet?query=${searchQuery}&numResults=${numResults}`\n        )\n          .then(resp => resp.json())\n          .then(data => {\n            localStorage.setItem(\n              \"searchRestaurants\",\n              JSON.stringify(data.businesses)\n            );\n\n            let restaurants = JSON.parse(localStorage.getItem(\"restaurants\"));\n            if (restaurants == null) {\n              restaurants = localStorage.getItem(\"searchRestaurants\");\n              localStorage.setItem(\"restaurants\", restaurants);\n              localStorage.setItem(\"restaurantIndex\", \"0\");\n            } else {\n              let newRestaurants = JSON.parse(\n                localStorage.getItem(\"searchRestaurants\")\n              );\n              restaurants = JSON.parse(localStorage.getItem(\"restaurants\"));\n              let restaurantIndex = restaurants.length;\n              localStorage.setItem(\n                \"restaurantIndex\",\n                restaurantIndex.toString()\n              );\n              restaurants.push(...newRestaurants);\n              localStorage.setItem(\"restaurants\", JSON.stringify(restaurants));\n            }\n          });\n      })\n      .then(() => {\n        // {restaurant: true, id: xxx}\n        if (localStorage.getItem(\"Favorites\") == null) {\n          localStorage.setItem(\n            \"Favorites\",\n            JSON.stringify({\n              recipes: [],\n              restaurants: []\n            })\n          );\n        }\n        if (localStorage.getItem(\"To Explore\") == null) {\n          localStorage.setItem(\n            \"To Explore\",\n            JSON.stringify({\n              recipes: [],\n              restaurants: []\n            })\n          );\n        }\n        if (localStorage.getItem(\"Do Not Show\") == null) {\n          localStorage.setItem(\n            \"Do Not Show\",\n            JSON.stringify({\n              recipes: [],\n              restaurants: []\n            })\n          );\n        }\n      })\n      .then(() => {\n        localStorage.setItem(\"query\", searchQuery);\n        let restaurants = JSON.parse(localStorage.getItem(\"restaurants\"));\n        let recipes = JSON.parse(localStorage.getItem(\"recipes\"));\n        window.setTimeout(() => {\n          props.history.push(\"/search\");\n        }, 2000);\n      });\n  };\n\n  return (\n    <PageLayout>\n      <h1>I'm Hungry</h1>\n      <SearchLayout>\n        <form\n          onSubmit={event => {\n            event.preventDefault();\n            sendQuery();\n          }}\n        >\n          <SearchInput\n            value={searchQuery}\n            id=\"search\"\n            placeholder=\"Enter Food\"\n            onChange={event => {\n              setSearchQuery(event.target.value);\n            }}\n          />\n          <SearchInput\n            value={numResults}\n            id=\"numResults\"\n            data-tip=\"Number of items to show in results\"\n            onChange={event => {\n              setNumResults(event.target.value);\n            }}\n          />\n          <SearchButton onClick={sendQuery}>Feed Me!</SearchButton>\n        </form>\n      </SearchLayout>\n      {loading ? <p>Loading...</p> : null}\n    </PageLayout>\n  );\n};\n\nexport default withRouter(HomePage);\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n/* Start page styling */\nlet Container = styled.div`\n  padding-left: 10px;\n  padding-right: 10px;\n`;\n\nconst HeadingLayout = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: space-between;\n`;\n\nconst NavLayout = styled.div`\n  width: 200px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst NavSelect = styled.select`\n  background-color: white;\n  margin: 5px;\n`;\n\nconst NavButton = styled.button`\n  background-color: white;\n  margin: 5px;\n`;\n\nconst ItemLayout = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 10px;\n  align-items: flex-start;\n  justify-content: space-between;\n  background-color: ${props => (props.dark ? \"grey\" : \"#f5f5f5\")};\n`;\n\nconst RestaurantItemLayout = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst RecipeItemLayout = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n/* End page styling */\n\nlet ListManagementPage = props => {\n  /* Initialize page state */\n  const [loading, setLoading] = useState(true);\n  const [selectedList, setSelectedList] = useState(\"\");\n  const [recipes, setRecipes] = useState({ results: [{}] });\n  const [restaurants, setRestaurants] = useState([]);\n\n  /* Load data from localStorage */\n  useEffect(() => {\n    let localStorageRecipes = JSON.parse(\n      localStorage.getItem(props.match.params.list)\n    );\n    console.log(localStorageRecipes);\n    localStorageRecipes = localStorageRecipes.recipes;\n    setRecipes(localStorageRecipes);\n\n    let localStorageRestaurants = JSON.parse(\n      localStorage.getItem(props.match.params.list)\n    );\n    localStorageRestaurants = localStorageRestaurants.restaurants;\n    setRestaurants(localStorageRestaurants);\n\n    setLoading(false);\n  }, []);\n\n  let results = loading ? (\n    <p>Loading...</p>\n  ) : (\n    <Container>\n      <HeadingLayout>\n        <h1>{props.match.params.list}</h1>\n        <NavLayout>\n          <NavSelect\n            onChange={event => setSelectedList(event.target.value)}\n            defaultValue=\"\"\n          >\n            <option value=\"\" hidden=\"hidden\" />\n            <option>Favorites</option>\n            <option>To Explore</option>\n            <option>Do Not Show</option>\n          </NavSelect>\n          <NavButton\n            onClick={() => {\n              if (selectedList !== \"\") {\n                props.history.push(`/lists/${selectedList}`);\n              }\n            }}\n          >\n            Manage Lists\n          </NavButton>\n          <NavButton onClick={() => props.history.push(\"/search\")}>\n            Return to Results\n          </NavButton>\n          <NavButton\n            onClick={() => {\n              props.history.push(\"/\");\n            }}\n          >\n            Return to Search\n          </NavButton>\n        </NavLayout>\n      </HeadingLayout>\n\n      {recipes.map((recipe, idx) => {\n        let allRecipes = JSON.parse(localStorage.getItem(\"recipes\"));\n        allRecipes = allRecipes.results;\n        let item = allRecipes[recipe];\n        return (\n          <Link to={`/recipe/${recipe}`} key={\"recipe-\" + idx}>\n            <ItemLayout dark={idx % 2 === 0}>\n              <RecipeItemLayout>\n                <h2>{item.title}</h2>\n                <p>\n                  Prep:{\" \"}\n                  {item.preparationMinutes ? item.preparationMinutes : \"?\"}{\" \"}\n                  minutes\n                </p>\n                <p>Cook: {item.readyInMinutes} minutes</p>\n              </RecipeItemLayout>\n              <h2>${item.pricePerServing / 100}</h2>\n            </ItemLayout>\n          </Link>\n        );\n      })}\n      {restaurants.map((restaurant, idx) => {\n        let isDark = recipes.length % 2 === 0 ? idx % 2 === 0 : idx % 2 !== 0;\n        let allRestaurants = JSON.parse(localStorage.getItem(\"restaurants\"));\n        let item = allRestaurants[restaurant];\n        return (\n          <Link to={`/restaurant/${restaurant}`} key={\"restaurant-\" + idx}>\n            <ItemLayout dark={isDark}>\n              <RestaurantItemLayout>\n                <h2>{item.name}</h2>\n                <p>Drive: </p>\n                <p />\n              </RestaurantItemLayout>\n              <h2>{item.price}</h2>\n            </ItemLayout>\n          </Link>\n        );\n      })}\n    </Container>\n  );\n  return results;\n};\n\nexport default withRouter(ListManagementPage);\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport Button from \"@material-ui/core/Button\"\nimport {withStyles} from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport PrintPage from \"../PrintPage\";\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        paddingRight: 30\n    },\n    button: {\n        marginBottom: 10,\n        width: '100%'\n    },\n    dropdown: {\n        marginBottom: 10,\n        width: '100%'\n    },\n    form: {\n        width: '100%'\n    }\n})\n\nclass ButtonGroup extends React.Component {\n    state = {\n        value: '',\n        open: false\n    };\n    handleChange = e => {\n        this.setState({\n            value: e.target.value\n        });\n    };\n    addToList = () => {\n        const list = this.state.value;\n        if (list === 'Favorites') {\n            let input = JSON.parse(localStorage.getItem('Favorites'));\n            if (this.props.restaurant) {\n                !input.restaurants.includes(this.props.id) && input.restaurants.push(this.props.id);\n            } else {\n                !input.recipes.includes(this.props.id) && input.recipes.push(this.props.id);\n            }\n            localStorage.setItem('Favorites', JSON.stringify(input));\n        } else if (list === 'To Explore') {\n            let input = JSON.parse(localStorage.getItem('To Explore'));\n            if (this.props.restaurant) {\n                !input.restaurants.includes(this.props.id) && input.restaurants.push(this.props.id);\n            } else {\n                !input.recipes.includes(this.props.id) && input.recipes.push(this.props.id);\n            }\n            localStorage.setItem('To Explore', JSON.stringify(input));\n        } else if (list === 'Do Not Show') {\n            let input = JSON.parse(localStorage.getItem('Do Not Show'));\n            if (this.props.restaurant) {\n                !input.restaurants.includes(this.props.id) && input.restaurants.push(this.props.id);\n            } else {\n                !input.recipes.includes(this.props.id) && input.recipes.push(this.props.id);\n            }\n            localStorage.setItem('Do Not Show', JSON.stringify(input));\n        }\n        console.log(localStorage);\n    }\n    handBack = () => {\n        this.props.history.push(\"/search\");\n    }\n    printDocument = () => {\n        this.props.restaurant ? this.props.history.push(\"/print/restaurant/\" + this.props.id) : this.props.history.push(\"/print/recipe/\" + this.props.id); \n    }\n    render() {\n        const {classes} = this.props;\n        return (\n            <div className={classes.root}>\n                <div>\n                    <Button \n                        className={classes.button} \n                        variant=\"contained\"\n                        onClick={this.printDocument}\n                    >\n                        Printable View\n                    </Button>\n                </div>\n                <div><Button className={classes.button} variant=\"contained\" onClick={this.handBack}>Back to Result</Button></div>\n                <div>\n                    <FormControl className={classes.form}>\n                        <NativeSelect\n                            value={this.state.value}\n                            onChange={this.handleChange}\n                            className={classes.dropdown}\n                        >\n                            <option value=\"\" disabled>\n                                \n                            </option>\n                            <option value={\"Favorites\"}>Favorites</option>\n                            <option value={\"To Explore\"}>To Explore</option>\n                            <option value={\"Do Not Show\"}>Do Not Show</option>\n                        </NativeSelect>\n                    </FormControl>\n                </div>\n                <div><Button className={classes.button} variant=\"contained\" onClick={this.addToList}>Add to List</Button></div>\n            </div>\n        ); \n    }\n}\n\nButtonGroup.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ButtonGroup);","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport RestaurantInfo from \"./sub-components/RestaurantInfo\";\nimport ButtonGroup from \"./sub-components/ButtonGroup\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PropTypes from \"prop-types\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 10\n  },\n  left: {\n    padding: theme.spacing.unit * 2\n  },\n  right: {\n    padding: theme.spacing.unit * 2\n  }\n});\n\nclass RestaurantPage extends React.Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root} id=\"restaurantPrint\">\n        <Grid container spacing={24}>\n          <Grid item xs={10} className={classes.left}>\n            <RestaurantInfo id={this.props.match.params.id} />\n          </Grid>\n          <Grid item xs={2} className={classes.right}>\n            <ButtonGroup\n              passId=\"restaurantPrint\"\n              restaurant={true}\n              id={this.props.match.params.id}\n              history={this.props.history}\n            />\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nRestaurantPage.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(withRouter(RestaurantPage));\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport RecipeInfo from './sub-components/RecipeInfo';\nimport ButtonGroup from './sub-components/ButtonGroup';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n    root: {\n      flexGrow: 1,\n      marginTop: 10\n    },\n    left: {\n        padding: theme.spacing.unit * 2\n    },\n    right: {\n        padding: theme.spacing.unit * 2\n    }\n});\n\nclass RecipePage extends React.Component {\n    render() {\n        const {classes} = this.props;\n        return (\n            <div className={classes.root} id=\"recipePrint\">\n                <Grid container spacing={24}>\n                    <Grid item xs={10} className={classes.left}>\n                        <RecipeInfo id={this.props.match.params.id}/>\n                    </Grid>\n                    <Grid item xs={2} className={classes.right}>\n                        <ButtonGroup passId=\"recipePrint\" restaurant={false} id={this.props.match.params.id} history={this.props.history}/>\n                    </Grid>\n                </Grid>\n                \n            </div>\n        ); \n    }\n}\n\nRecipePage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\nexport default withStyles(styles)(withRouter(RecipePage));\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport ButtonGroup from \"./sub-components/ButtonGroup\";\n\n// TODO: Do not show\nlet Container = styled.div`\n  padding-left: 10px;\n  padding-right: 10px;\n`;\n\nlet ColumnLayout = styled.div`\n  display: grid;\n  grid-template-columns: 6fr 6fr;\n  grid-template-rows: 1fr 1fr;\n  grid-gap: 20px;\n`;\n\nconst ItemLayout = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 10px;\n  align-items: flex-start;\n  justify-content: space-between;\n  background-color: ${props => (props.dark ? \"grey\" : \"#f5f5f5\")};\n`;\n\nconst RestaurantItemLayout = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst SubItemLayout = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nconst RecipeItemLayout = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst HeadingLayout = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: space-between;\n`;\n\nconst NavLayout = styled.div`\n  width: 200px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst NavSelect = styled.select`\n  background-color: white;\n  margin: 5px;\n`;\n\nconst NavButton = styled.button`\n  background-color: white;\n  margin: 5px;\n`;\n\nconst PhotoBox = styled.div`\n  position: relative;\n  width: 100%;\n  height: 40%;\n  padding: 40%;\n`;\n\nconst Photo = styled.img`\n  position: absolute;\n  width: 200px;\n  top: ${props => props.top}%;\n  left: ${props => props.left}%;\n  transform: rotate(${props => props.rot}deg);\n`;\n\n\nlet SearchPage = props => {\n  const [restaurants, setRestaurants] = useState([{}]);\n  const [recipes, setRecipes] = useState({ results: [{}] });\n  const [query, setQuery] = useState(\"\");\n  const [selectedList, setSelectedList] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [recipeOffset, setRecipeOffset] = useState(0);\n  const [restaurantOffset, setRestaurantOffset] = useState(0);\n  const [driveTimes, setDriveTimes] = useState([]);\n\n\n  useEffect(() => {\n    let localStorageRecipes = JSON.parse(localStorage.getItem(\"searchRecipes\"));\n    let localStorageRestaurants = JSON.parse(\n      localStorage.getItem(\"searchRestaurants\")\n    );\n    let restaurantIndex = parseInt(localStorage.getItem(\"restaurantIndex\"));\n    let recipeIndex = parseInt(localStorage.getItem(\"recipeIndex\"));\n    setRestaurants(localStorageRestaurants);\n    setRestaurantOffset(restaurantIndex);\n    setRecipes(localStorageRecipes);\n    setRecipeOffset(recipeIndex);\n    setQuery(localStorage.getItem(\"query\"));\n    setDriveTimes(new Array(restaurants.length));\n    setLoading(false);\n  }, []);\n\n  let results = loading ? (\n    <div>Loading...</div>\n  ) : (\n    <Container>\n      {console.log(restaurants)}\n      {console.log(recipes)}\n      <HeadingLayout>\n        <h1>Search Results for {query}</h1>\n        <NavLayout>\n          <NavSelect\n            onChange={event => setSelectedList(event.target.value)}\n            id=\"lists\"\n            defaultValue=\"\"\n          >\n            <option value=\"\" hidden=\"hidden\" />\n            <option>Favorites</option>\n            <option>To Explore</option>\n            <option>Do Not Show</option>\n          </NavSelect>\n          <NavButton\n            onClick={() => {\n              if (selectedList !== \"\") {\n                props.history.push(`/lists/${selectedList}`);\n              }\n            }}\n          >\n            Manage Lists\n          </NavButton>\n          <NavButton\n            onClick={() => {\n              props.history.push(\"/\");\n            }}\n          >\n            Return to Search\n          </NavButton>\n        </NavLayout>\n      </HeadingLayout>\n\n      <PhotoBox id=\"collage\">\n        {recipes.results.map((recipe, idx) => {\n          return (\n            <Photo\n              key={\"recipe-photo-\" + idx}\n                id={`recipe-photo-${idx}`}\n              left={Math.random() * (idx + 25)}\n              top={Math.random() * (idx + 25)}\n              rot={Math.random() * (idx + 30)}\n              src={recipe.image}\n            />\n          );\n        })}\n        {restaurants.map((restaurant, idx) => {\n            console.log(restaurant);\n          return (\n            <Photo\n              key={\"restaurant-photo-\" + idx}\n              id={`restaurant-photo-${idx}`}\n              left={Math.random() * (idx + 25)}\n              top={Math.random() * (idx + 25)}\n              rot={-Math.random() * (idx + 30)}\n              src={restaurant.image_url}\n            />\n          );\n        })}\n      </PhotoBox>\n\n      <ColumnLayout>\n        <div id=\"restaurant-list\">\n          <h2>Restaurants</h2>\n          {restaurants.map((restaurant, idx) => {\n            let isDark =\n              restaurants.length % 2 === 0 ? idx % 2 === 0 : idx % 2 !== 0;\n\n            return (\n              <Link\n                to={`/restaurant/${idx + restaurantOffset}`}\n                key={`restaurant-${idx}`}\n                id={`restaurant-${idx}`}\n              >\n                <ItemLayout dark={isDark}>\n                  <RestaurantItemLayout>\n                    <h2 id=\"restaurantName\">{restaurant.name}</h2>\n                    <p id=\"drive\">{Math.round(Math.random() * 25)} minutes</p>\n                  </RestaurantItemLayout>\n                  <SubItemLayout id=\"address\">\n                      {restaurant.location.address1}\n                  </SubItemLayout>\n                  <h2>{restaurant.price}</h2>\n                </ItemLayout>\n              </Link>\n            );\n          })}\n        </div>\n        <div id=\"recipe-list\">\n          <h2>Recipes</h2>\n          {recipes.results.map((recipe, idx) => {\n            let isDark =\n              restaurants.length % 2 === 0 ? idx % 2 === 0 : idx % 2 !== 0;\n            return (\n              <Link to={`/recipe/${idx + recipeOffset}`} key={`recipe-${idx}`} id={`recipe-${idx}`}>\n                <ItemLayout dark={isDark}>\n                  <RecipeItemLayout>\n                    <h2 id=\"recipeName\">{recipe.title}</h2>\n                    <p id=\"prep\">\n                      Prep Time: {\" \"}\n                      {recipe.preparationMinutes\n                        ? recipe.preparationMinutes\n                        : \"?\"}{\" \"}\n                      minutes\n                    </p>\n                  </RecipeItemLayout>\n                  <SubItemLayout>\n                      <p id=\"cook\">Cook Time: {recipe.readyInMinutes} minutes</p>\n                  </SubItemLayout>\n                  <h2>${recipe.pricePerServing / 100}</h2>\n                </ItemLayout>\n              </Link>\n            );\n          })}\n        </div>\n      </ColumnLayout>\n    </Container>\n  );\n  return results;\n};\n\nexport default withRouter(SearchPage);\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport PrintPage from \"./components/PrintPage\";\nimport HomePage from \"./components/HomePage\";\nimport ListManagementPage from \"./components/ListManagementPage\";\nimport RestaurantPage from \"./components/RestaurantPage\";\nimport RecipePage from \"./components/RecipePage\";\nimport SearchPage from \"./components/SearchPage\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route path=\"/lists/:list\" component={ListManagementPage} />\n            <Route path=\"/restaurant/:id\" component={RestaurantPage} />\n            <Route path=\"/recipe/:id\" component={RecipePage} />\n            <Route path=\"/search\" component={SearchPage} />\n            <Route path=\"/print/:name/:id\" component={PrintPage} />\n          </>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}